<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="DataGrid" x:Key="DataGridStyle">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="ColumnWidth" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
       
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#a0a0a0"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#e3e3e3"/>
        <Setter Property="VerticalGridLinesBrush" Value="#e3e3e3"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="Background" Value="Transparent"/><!--行整体颜色-->
        <Setter Property="RowBackground" Value="#ffffff"/><!--行颜色-->
        <Setter Property="AlternatingRowBackground" Value="#dff2ff"/><!--交替颜色 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="False" Name="DG_ScrollViewer">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="ScrollViewer">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <!--<Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly=DataGrid}}" Width="{Binding Path=CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGrid}}">
                                            <Button.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGrid}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>-->
                                        <!-- 改写可视化树 -->
                                        <Label Content="序号" Background="#3399ff"  VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Width="{Binding Path=CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGrid}}" 
                                               FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" BorderThickness="0,0,1,1" BorderBrush="#e3e3e3" Foreground="#ffffff"/>
                                        
                                        <DataGridColumnHeadersPresenter Grid.Column="1" Name="PART_ColumnHeadersPresenter">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGrid}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.ColumnSpan="2" Grid.Row="1" Name="PART_ScrollContentPresenter" />
                                        <ScrollBar Grid.Column="2" Grid.Row="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding Path=NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGrid}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader" x:Key="DataGridColumnHeaderStyle">
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="#e3e3e3"/>
        <Setter Property="Background" Value="#3399ff"/>
        <Setter Property="Padding" Value="10, 0, 10, 0"/>
    </Style>

    <Style TargetType="DataGridRowHeader" x:Key="DataGridRowHeaderStyle">
        <Setter Property="Width" Value="50"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10, 0, 10, 0"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="#e3e3e3"/>
    </Style>

    <Style TargetType="DataGridRow" x:Key="DataGridRowStyle">
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#eec2fe"/>
                <Setter Property="Foreground" Value="#000000"/>
                <Setter Property="BorderBrush" Value="#23aaff"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True"><!--行选中样式-->
                <Setter Property="Background" Value="#bb72ff"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="BorderBrush" Value="#014169" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell" x:Key="DataGridCellStyle">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Name="RootElement" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Cursor="{TemplateBinding Cursor}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Rectangle Name="RightGridlineElement" Grid.Column="1" VerticalAlignment="Stretch" Width="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers >
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/><!--单元格设置透明-->
                <Setter Property="BorderBrush" Value="#e3e3e3" />
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>





    <!-- 模版列编辑按钮样式 -->
    <Style TargetType="Button" x:Key="EditButtonGridStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="ToolTip" Value="编辑"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/Paging/table_button_edit_normal.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0,0,0,0" 
                                BorderBrush="Transparent" CornerRadius="0" 
                                Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--设置鼠标划过按钮时样式-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ToolTip" Value="编辑"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_edit_over.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮被按下时样式-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="ToolTip" Value="编辑"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_edit_click.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮不可用时样式-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Button/button_disable.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 模版列删除按钮样式 -->
    <Style TargetType="Button" x:Key="DeleteButtonGridStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="ToolTip" Value="删除"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/Paging/table_button_delete_normal.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0,0,0,0" 
                                BorderBrush="Transparent" CornerRadius="0" 
                                Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--设置鼠标划过按钮时样式-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ToolTip" Value="删除"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_delete_over.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮被按下时样式-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="ToolTip" Value="删除"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_delete_click.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮不可用时样式-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Button/button_disable.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 模版列启用按钮样式 -->
    <Style TargetType="Button" x:Key="ActivateButtonGridStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/Paging/table_button_using_normal.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0,0,0,0" 
                                BorderBrush="Transparent" CornerRadius="0" 
                                Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--设置鼠标划过按钮时样式-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_using_over.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮被按下时样式-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_using_click.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮不可用时样式-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Button/button_disable.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 模版列不可用按钮样式 -->
    <Style TargetType="Button" x:Key="StopButtonGridStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/Paging/table_button_unusing_normal.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0,0,0,0" 
                                BorderBrush="Transparent" CornerRadius="0" 
                                Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--设置鼠标划过按钮时样式-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_unusing_over.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮被按下时样式-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_unusing_click.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮不可用时样式-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Button/button_disable.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 模版列授权按钮样式 -->
    <Style TargetType="Button" x:Key="PermissionButtonGridStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="ToolTip" Value="授权"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/Paging/table_button_permission_normal.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0,0,0,0" 
                                BorderBrush="Transparent" CornerRadius="0" 
                                Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--设置鼠标划过按钮时样式-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ToolTip" Value="授权"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_permission_over.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮被按下时样式-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="ToolTip" Value="授权"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Paging/table_button_permission_click.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--设置按钮不可用时样式-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/Button/button_disable.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>